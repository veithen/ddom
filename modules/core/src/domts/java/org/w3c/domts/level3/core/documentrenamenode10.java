
/*
This Java source file was generated by test-to-java.xsl
and is a derived work from the source document.
The source document contained the following notice:



Copyright (c) 2001-2004 World Wide Web Consortium, 
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University).  All 
Rights Reserved.  This program is distributed under the W3C's Software
Intellectual Property License.  This program is distributed in the 
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
PURPOSE.  

See W3C License http://www.w3.org/Consortium/Legal/ for more details.


*/

package org.w3c.domts.level3.core;

import org.w3c.dom.*;


import org.w3c.domts.DOMTestCase;
import org.w3c.domts.DOMTestDocumentBuilderFactory;



/**
 *  The method renameNode renames an existing node and raises a  NAMESPACE_ERR
 *  if the qualifiedName has a prefix and the namespaceURI is null but a 
 *  NOT_SUPPORTED_ERR should be raised since the the type of the specified node is 
 *  neither ELEMENT_NODE nor ATTRIBUTE_NODE.
 *  
 *  Invoke the renameNode method on a new document node to rename a node to nodes 
 *  with malformed qualifiedNames.
 *  Check if a NOT_SUPPORTED_ERR gets thrown instead of a NAMESPACE_ERR.
* @author IBM
* @author Neil Delima
* @see <a href="http://www.w3.org/TR/2003/CR-DOM-Level-3-Core-20031107/core#Document3-renameNode">http://www.w3.org/TR/2003/CR-DOM-Level-3-Core-20031107/core#Document3-renameNode</a>
*/
public final class documentrenamenode10 extends DOMTestCase {

   /**
    * Constructor.
    * @param factory document factory, may not be null
    * @throws org.w3c.domts.DOMTestIncompatibleException Thrown if test is not compatible with parser configuration
    */
   public documentrenamenode10(final DOMTestDocumentBuilderFactory factory)  throws org.w3c.domts.DOMTestIncompatibleException {

      org.w3c.domts.DocumentBuilderSetting[] settings = 
          new org.w3c.domts.DocumentBuilderSetting[] {
org.w3c.domts.DocumentBuilderSetting.namespaceAware
        };
        DOMTestDocumentBuilderFactory testFactory = factory.newInstance(settings);
        setFactory(testFactory);

    //
    //   check if loaded documents are supported for content type
    //
    String contentType = getContentType();
    preload(contentType, "hc_staff", false);
    }

   /**
    * Runs the test case.
    * @throws Throwable Any uncaught exception causes test to fail
    */
   public void runTest() throws Throwable {
      Document doc;
      String textEntry = "hello";
      Text textNode;
      Node renamedNode;
      String qualifiedName;
      DocumentType nullDocType = null;

      java.util.List qualifiedNames = new java.util.ArrayList();
      qualifiedNames.add("_:");
      qualifiedNames.add(":0");
      qualifiedNames.add(":");
      qualifiedNames.add("a0:0");
      qualifiedNames.add("_:0;");
      qualifiedNames.add("a:::::c");
      
      doc = (Document) load("hc_staff", false);
      textNode = doc.createTextNode(textEntry);
      for (int indexN10060 = 0; indexN10060 < qualifiedNames.size(); indexN10060++) {
          qualifiedName = (String) qualifiedNames.get(indexN10060);
    
      {
         boolean success = false;
         try {
            renamedNode = doc.renameNode(textNode, "http://www.w3.org/XML/1998/namespace", qualifiedName);
          } catch (DOMException ex) {
            success = (ex.code == DOMException.NOT_SUPPORTED_ERR);
         }
         assertTrue("documentrenamenode10_NOT_SUPPORTED_ERR", success);
      }
  }
      }
   /**
    *  Gets URI that identifies the test.
    *  @return uri identifier of test
    */
   public String getTargetURI() {
      return "http://www.w3.org/2001/DOM-Test-Suite/level3/core/documentrenamenode10";
   }
   /**
    * Runs this test from the command line.
    * @param args command line arguments
    */
   public static void main(final String[] args) {
        DOMTestCase.doMain(documentrenamenode10.class, args);
   }
}

